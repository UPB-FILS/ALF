(module
  (import "io" "print" (func $print (param $n i32)))
	(func $start (param $a i32)
    	    get_local $a
            i32.const 3
            i32.rem_s
            call $print
        )
  
  (export "start" (func $start))

)

fetch('../out/main.wasm').then(response =>
  response.arrayBuffer()
).then(bytes => WebAssembly.instantiate(bytes, {
  io: {
    print: console.log
  }
})).then(results => {
  let instance = results.instance;
  // instance is your webassembly module
  let asm = instance.exports;
  // asm is an object with all the items that you exported
  console.log (asm.start(8));
}).catch(console.error);
